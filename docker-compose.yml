version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: boltdb_postgres
    environment:
      POSTGRES_DB: boltdb
      POSTGRES_USER: boltdb_user
      POSTGRES_PASSWORD: boltdb_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - boltdb_network

  redis:
    image: redis:7-alpine
    container_name: boltdb_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - boltdb_network

  ocr-service:
    build:
      context: ./services/ocr
      dockerfile: Dockerfile
    container_name: boltdb_ocr
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    volumes:
      - ocr_uploads:/app/uploads
      - ocr_models:/app/models
    networks:
      - boltdb_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: boltdb_app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://boltdb_user:boltdb_password@postgres:5432/boltdb
      - REDIS_URL=redis://redis:6379
      - OCR_SERVICE_URL=http://ocr-service:8080
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - ocr-service
    networks:
      - boltdb_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  ocr_uploads:
  ocr_models:

networks:
  boltdb_network:
    driver: bridge