version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: mechhub_postgres
    environment:
      POSTGRES_DB: mechhub
      POSTGRES_USER: mechhub_user
      POSTGRES_PASSWORD: mechhub_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mechhub_network

  redis:
    image: redis:7-alpine
    container_name: mechhub_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - mechhub_network

  ocr_service:
    build:
      context: ./services/ocr
      dockerfile: Dockerfile
    container_name: mechhub_ocr
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
    networks:
      - mechhub_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: mechhub_app
    ports:
      - "3000:3000"
      - "5555:5555"  # Prisma Studio
    environment:
      - DATABASE_URL=postgresql://mechhub_user:mechhub_password@postgres:5432/mechhub
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    networks:
      - mechhub_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  mechhub_network:
    driver: bridge